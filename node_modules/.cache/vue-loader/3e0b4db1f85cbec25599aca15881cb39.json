{"remainingRequest":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\src\\views\\Home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\src\\views\\Home.vue","mtime":1644155665833},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644154681877},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\babel-loader\\lib\\index.js","mtime":1644154681784},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\ts-loader\\index.js","mtime":1644154698120},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644154681877},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\vue-loader\\lib\\index.js","mtime":1644154704041}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgRWxlY3Rpb25Db250cmFjdCBmcm9tICJALy4uL2J1aWxkL2NvbnRyYWN0cy9FbGVjdGlvbkNvbnRyYWN0Lmpzb24iOwppbXBvcnQgV2ViMyBmcm9tICJ3ZWIzIjsKCkBDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHsKICAgIC8vIEhlbGxvV29ybGQsCiAgfSwKfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgSG9tZSBleHRlbmRzIFZ1ZSB7CiAgd2ViM0luc3RhbmNlOiBXZWIzIHwgbnVsbCA9IG51bGw7CiAgZGVwbG95ZWRFbGVjdGlvbkNvbnRyYWN0QWRkcjogc3RyaW5nIHwgbnVsbCA9IG51bGw7CiAgZGVwbG95ZWRFbGVjdGlvbkNvbnRyYWN0OiBhbnkgPSBudWxsOwogIGN1cnJlbnRBZGRyZXNzOiBzdHJpbmcgfCBudWxsID0gbnVsbDsKICBjdXJyZW50Vm90ZXI6IGFueSA9IG51bGw7CiAgY2FuZGlkYXRlczogYW55W10gPSBbXTsKCiAgY2FuZGlkYXRlVm90ZUFkZHI6IHN0cmluZyB8IG51bGwgPSBudWxsOwogIGRlbGVnYXRlVm90ZUFkZHI6IHN0cmluZyB8IG51bGwgPSBudWxsOwoKICBzdHViQWNjb3VudHM6IGFueSA9IFtdOwoKICBhc3luYyBtb3VudGVkKCkgewogICAgY29uc3Qgd2ViM1Byb3ZpZGVyID0gbmV3IFdlYjMucHJvdmlkZXJzLkh0dHBQcm92aWRlcigKICAgICAgLy8id3M6Ly8xNzIuMjUuMC4xMDI6ODU0NiIKICAgICAgImh0dHA6Ly8xOTIuMTY4LjEyLjE0Njo4NTQ1IgogICAgKTsKCiAgICBpZiAodHlwZW9mICh3aW5kb3cgYXMgYW55KS5ldGhlcmV1bSAhPT0gInVuZGVmaW5lZCIpIHsKICAgICAgY29uc29sZS5sb2coIk1ldGFNYXNrIGlzIGluc3RhbGxlZCEiKTsKCiAgICAgIC8vICh3aW5kb3cgYXMgYW55KS5ldGhlcmV1bS5yZXF1ZXN0KHsgbWV0aG9kOiAnZXRoX3JlcXVlc3RBY2NvdW50cycgfSk7CgogICAgICAvLyB0aGlzLndlYjNJbnN0YW5jZSA9IG5ldyBXZWIzKCh3aW5kb3cgYXMgYW55KS5ldGhlcmV1bSk7CiAgICAgIHRoaXMud2ViM0luc3RhbmNlID0gbmV3IFdlYjMod2ViM1Byb3ZpZGVyKTsKCiAgICAgIGNvbnNvbGUubG9nKCJ3ZWIzSW5zdGFuY2UiLCB0aGlzLndlYjNJbnN0YW5jZSk7CgogICAgICBjb25zdCBmZXRjaGVkQWNjb3VudHMgPSBhd2FpdCB0aGlzLndlYjNJbnN0YW5jZS5ldGguZ2V0QWNjb3VudHMoKTsKCiAgICAgIGNvbnNvbGUubG9nKCJmZXRjaGVkQWNjb3VudHMiLCBmZXRjaGVkQWNjb3VudHMpOwoKICAgICAgdGhpcy5jdXJyZW50QWRkcmVzcyA9IGZldGNoZWRBY2NvdW50c1swXTsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnNvbGUubG9nKCJNZXRhTWFzayBpcyBub3QgaW5zdGFsbGVkIik7CiAgICB9CiAgfQoKICBiZWZvcmVEZXN0cm95KCkgewogICAgaWYgKHRoaXMud2ViM0luc3RhbmNlKSB7CiAgICAgIHRoaXMud2ViM0luc3RhbmNlID0gbnVsbDsKICAgIH0KICB9CgogIGFzeW5jIHVubG9ja0FjY291bnQoYWRkcmVzczogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSB7CiAgICAvLyB1bmxvY2sgZm9yIGEgbG9uZyB0aW1lCiAgICB0aGlzLndlYjNJbnN0YW5jZSEuZXRoLnBlcnNvbmFsLnVubG9ja0FjY291bnQoYWRkcmVzcywgcGFzc3dvcmQsIDE1MDAwKTsKCiAgICB0aGlzLmN1cnJlbnRWb3RlciA9IGF3YWl0IHRoaXMuZ2V0Q3VycmVudFZvdGVyKCk7CiAgfQoKICBhc3luYyBnZXREZXBsb3llZENvbnRyYWN0KCkgewogICAgdGhpcy5kZXBsb3llZEVsZWN0aW9uQ29udHJhY3QgPSBuZXcgdGhpcy53ZWIzSW5zdGFuY2UhLmV0aC5Db250cmFjdCgKICAgICAgRWxlY3Rpb25Db250cmFjdC5hYmkgYXMgYW55LAogICAgICB0aGlzLmRlcGxveWVkRWxlY3Rpb25Db250cmFjdEFkZHIhCiAgICApIGFzIGFueTsKCiAgICB0aGlzLmN1cnJlbnRWb3RlciA9IGF3YWl0IHRoaXMuZ2V0Q3VycmVudFZvdGVyKCk7CiAgICB0aGlzLmNhbmRpZGF0ZXMgPSBhd2FpdCB0aGlzLmdldEFsbENhbmRpZGF0ZXMoKTsKICB9CgogIGFzeW5jIGdldEN1cnJlbnRWb3RlcigpIHsKICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuZGVwbG95ZWRFbGVjdGlvbkNvbnRyYWN0Lm1ldGhvZHMKICAgICAgLmdldEN1cnJlbnRWb3RlcigpCiAgICAgIC5jYWxsKHsgZnJvbTogdGhpcy5jdXJyZW50QWRkcmVzcyB9KTsKCiAgICBjb25zb2xlLmxvZygiY3VycmVudFZvdGVyIiwgcmVzKTsKCiAgICByZXR1cm4gcmVzOwogIH0KCiAgYXN5bmMgYWRkVm90ZXJzKCkgewogICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5kZXBsb3llZEVsZWN0aW9uQ29udHJhY3QubWV0aG9kcwogICAgICAuYWRkVm90ZXJzKFsiMHhhOGZGODM5RDgzQmQ3RDg1M2Q4Qjc1NTA2NTg5ZUJlQUJCNkNiMURGIl0pCiAgICAgIC5jYWxsKHsgZnJvbTogdGhpcy5jdXJyZW50QWRkcmVzcyB9KTsKICB9CgogIGFzeW5jIHZvdGUoKSB7CiAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmRlcGxveWVkRWxlY3Rpb25Db250cmFjdC5tZXRob2RzCiAgICAgIC52b3RlKHRoaXMuY2FuZGlkYXRlVm90ZUFkZHIpCiAgICAgIC5zZW5kKHsgZnJvbTogdGhpcy5jdXJyZW50QWRkcmVzcyB9KTsKCiAgICB0aGlzLmNhbmRpZGF0ZVZvdGVBZGRyID0gbnVsbDsKCiAgICAvLyBVcGRhdGUgY3VycmVudCB2b3RlcgogICAgdGhpcy5jdXJyZW50Vm90ZXIgPSBhd2FpdCB0aGlzLmdldEN1cnJlbnRWb3RlcigpOwoKICAgIGNvbnNvbGUubG9nKCJ2b3RlZCIsIHJlcyk7CiAgfQoKICBhc3luYyBkZWxlZ2F0ZVZvdGUoKSB7CiAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmRlcGxveWVkRWxlY3Rpb25Db250cmFjdC5tZXRob2RzCiAgICAgIC5kZWxlZ2F0ZVZvdGUodGhpcy5kZWxlZ2F0ZVZvdGVBZGRyKQogICAgICAuc2VuZCh7IGZyb206IHRoaXMuY3VycmVudEFkZHJlc3MgfSk7CgogICAgdGhpcy5kZWxlZ2F0ZVZvdGVBZGRyID0gbnVsbDsKCiAgICAvLyBVcGRhdGUgY3VycmVudCB2b3RlcgogICAgdGhpcy5jdXJyZW50Vm90ZXIgPSBhd2FpdCB0aGlzLmdldEN1cnJlbnRWb3RlcigpOwoKICAgIGNvbnNvbGUubG9nKCJ2b3RlZCIsIHJlcyk7CiAgfQoKICBhc3luYyBnZXRBbGxDYW5kaWRhdGVzKCkgewogICAgY29uc3QgY2FuZGlkYXRlcyA9IFtdOwogICAgY29uc3QgY2FuZGlkYXRlc0NvdW50ID0gTnVtYmVyKAogICAgICBhd2FpdCB0aGlzLmRlcGxveWVkRWxlY3Rpb25Db250cmFjdC5tZXRob2RzCiAgICAgICAgLmNhbmRpZGF0ZXNDb3VudCgpCiAgICAgICAgLmNhbGwoeyBmcm9tOiB0aGlzLmN1cnJlbnRBZGRyZXNzIH0pCiAgICApOwoKICAgIGNvbnNvbGUubG9nKCJjYW5kaWRhdGVzQ291bnQiLCB0eXBlb2YgY2FuZGlkYXRlc0NvdW50LCBjYW5kaWRhdGVzQ291bnQpOwoKICAgIGZvciAoY29uc3QgW2ldIG9mIG5ldyBBcnJheShjYW5kaWRhdGVzQ291bnQpLmVudHJpZXMoKSkgewogICAgICBjb25zb2xlLmxvZygiY2FuZGlkYXRlIGluZGV4IiwgdHlwZW9mIGksIGkpOwoKICAgICAgY29uc3QgY2FuZGlkYXRlID0gYXdhaXQgdGhpcy5kZXBsb3llZEVsZWN0aW9uQ29udHJhY3QubWV0aG9kcwogICAgICAgIC5jYW5kaWRhdGVzTGlzdChpKQogICAgICAgIC5jYWxsKHsgZnJvbTogdGhpcy5jdXJyZW50QWRkcmVzcyB9KTsKCiAgICAgIGNhbmRpZGF0ZXMucHVzaChjYW5kaWRhdGUpOwogICAgfQoKICAgIGNvbnNvbGUubG9nKCJjYW5kaWF0ZXMiLCBjYW5kaWRhdGVzKTsKCiAgICByZXR1cm4gY2FuZGlkYXRlczsKICB9CgogIGFzeW5jIGdldFdpbm5lcigpIHsKICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuZGVwbG95ZWRFbGVjdGlvbkNvbnRyYWN0Lm1ldGhvZHMKICAgICAgLmdldFdpbm5lcigpCiAgICAgIC5jYWxsKHsgZnJvbTogdGhpcy5jdXJyZW50QWRkcmVzcyB9KTsKCiAgICBjb25zb2xlLmxvZygid2lubmVyIiwgcmVzKTsKICB9Cn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <b-container fluid class=\"fillspace box red\">\n    <b-row v-if=\"deployedElectionContract\">\n      <b-col>\n        <!-- Informative Section -->\n        <b-row class=\"orange\">\n          <!-- <h2>Description de l'élection</h2> -->\n          <!-- <p>Ici décrire le contexte de l'élection (+ les dates), et expliquer les actions possibles genre voter déléguer etc.</p> -->\n          <b-card header=\"Description de l'élection\">\n            <b-card-text\n              >Ici décrire le contexte de l'élection (+ les dates), et expliquer\n              les actions possibles genre voter déléguer etc.</b-card-text\n            >\n          </b-card>\n        </b-row>\n        <!-- Voter Section -->\n        <b-row class=\"box green\">\n          <b-card header=\"Votre profil de votant\">\n            <!-- Voter address -->\n            <b-card-text>\n              <span v-if=\"currentAddress\"\n                >Votre adresse actuelle : {{ currentAddress }}</span\n              >\n              <span v-else>Veuillez vous connecter sur MetaMask</span>\n            </b-card-text>\n\n            <!-- Informative text on voting -->\n            <b-card-text\n              >Afin de pouvoir voter, vous devez avoir été ajouté à la liste des\n              votants par le responsable de l'élection. Contactez ce dernier\n              pour toute demande à ce sujet.</b-card-text\n            >\n\n            <!-- Vote Section -->\n            <b-card-text v-if=\"currentVoter\">\n              <!-- If can vote -->\n              <div v-if=\"currentVoter.voteWeight\">\n                <span class=\"box green\">Vous êtes autorisé à voter</span>\n\n                <!-- Vote form -->\n                <b-form\n                  @submit.prevent=\"vote\"\n                  v-if=\"!currentVoter.hasVoted && !currentVoter.hasDelegated\"\n                >\n                  <label class=\"sr-only\" for=\"Candidate Address\"\n                    >Adresse du candidat :</label\n                  >\n                  <b-input-group prepend=\"@\" class=\"mb-2 mr-sm-2 mb-sm-0\">\n                    <b-form-input\n                      v-model=\"candidateVoteAddr\"\n                      placeholder=\"Entrer une adresse\"\n                      required\n                    ></b-form-input>\n                  </b-input-group>\n                  <b-button type=\"submit\" variant=\"primary\">Voter</b-button>\n                </b-form>\n\n                <span v-else-if=\"!currentVoter.hasDelegated\" class=\"box red\"\n                  >Vous avez déjà voté pour : {{ currentVoter.votedFor }}</span\n                >\n              </div>\n              <span v-else-if=\"!currentVoter.hasDelegated\" class=\"box red\"\n                >Vous n'êtes pas autorisé à voter</span\n              >\n            </b-card-text>\n\n            <hr />\n\n            <!-- Informative text on delegating -->\n            <b-card-text>[Ici explication de la délégation]</b-card-text>\n\n            <!-- Delegation Section -->\n            <b-card-text v-if=\"currentVoter && !currentVoter.hasVoted\">\n              <!-- Delegation form -->\n              <b-form\n                @submit.prevent=\"delegateVote\"\n                v-if=\"!currentVoter.hasDelegated\"\n              >\n                <label class=\"sr-only\" for=\"Receiver Address\"\n                  >Adresse du délégué :</label\n                >\n                <b-input-group prepend=\"@\" class=\"mb-2 mr-sm-2 mb-sm-0\">\n                  <b-form-input\n                    v-model=\"delegateVoteAddr\"\n                    placeholder=\"Entrer une adresse\"\n                    required\n                  ></b-form-input>\n                </b-input-group>\n                <b-button type=\"submit\" variant=\"primary\">Déléguer</b-button>\n              </b-form>\n              <span v-else class=\"box red\">\n                Vous avez délégué votre vote à :\n                {{ currentVoter.delegatedTo }}\n              </span>\n            </b-card-text>\n          </b-card>\n        </b-row>\n      </b-col>\n\n      <!-- Candidates Section -->\n      <b-col class=\"box blue\" v-if=\"currentVoter\">\n        <b-card header=\"Section des candidats\">\n          <b-list-group v-if=\"!currentVoter.hasVoted\">\n            <b-list-group-item\n              v-for=\"candidate in candidates\"\n              :key=\"candidate\"\n              >{{ candidate }}</b-list-group-item\n            >\n          </b-list-group>\n        </b-card>\n      </b-col>\n    </b-row>\n    <b-form @submit.prevent=\"getDeployedContract\" v-else>\n      <b-form-group\n        id=\"input-group-1\"\n        label=\"Conctract address:\"\n        label-for=\"input-1\"\n        description=\"The address of the contract\"\n      >\n        <b-form-input\n          id=\"input-1\"\n          v-model=\"deployedElectionContractAddr\"\n          placeholder=\"Enter address\"\n          required\n        ></b-form-input>\n      </b-form-group>\n\n      <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n    </b-form>\n\n    <!-- left for debug to be removed in future -->\n    <table v-if=\"stubAccounts.length\">\n      <thead>\n        <tr>\n          <th>Address</th>\n          <th>Password</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"account in stubAccounts\" :key=\"account.address\">\n          <td>{{ account.address }}</td>\n          <td>{{ account.password }}</td>\n          <td>\n            <button @click=\"currentAddress = account.address\">\n              Make default\n            </button>\n            <button @click=\"unlockAccount(account.address, account.password)\">\n              Unlock\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </b-container>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport ElectionContract from \"@/../build/contracts/ElectionContract.json\";\nimport Web3 from \"web3\";\n\n@Component({\n  components: {\n    // HelloWorld,\n  },\n})\nexport default class Home extends Vue {\n  web3Instance: Web3 | null = null;\n  deployedElectionContractAddr: string | null = null;\n  deployedElectionContract: any = null;\n  currentAddress: string | null = null;\n  currentVoter: any = null;\n  candidates: any[] = [];\n\n  candidateVoteAddr: string | null = null;\n  delegateVoteAddr: string | null = null;\n\n  stubAccounts: any = [];\n\n  async mounted() {\n    const web3Provider = new Web3.providers.HttpProvider(\n      //\"ws://172.25.0.102:8546\"\n      \"http://192.168.12.146:8545\"\n    );\n\n    if (typeof (window as any).ethereum !== \"undefined\") {\n      console.log(\"MetaMask is installed!\");\n\n      // (window as any).ethereum.request({ method: 'eth_requestAccounts' });\n\n      // this.web3Instance = new Web3((window as any).ethereum);\n      this.web3Instance = new Web3(web3Provider);\n\n      console.log(\"web3Instance\", this.web3Instance);\n\n      const fetchedAccounts = await this.web3Instance.eth.getAccounts();\n\n      console.log(\"fetchedAccounts\", fetchedAccounts);\n\n      this.currentAddress = fetchedAccounts[0];\n    } else {\n      console.log(\"MetaMask is not installed\");\n    }\n  }\n\n  beforeDestroy() {\n    if (this.web3Instance) {\n      this.web3Instance = null;\n    }\n  }\n\n  async unlockAccount(address: string, password: string) {\n    // unlock for a long time\n    this.web3Instance!.eth.personal.unlockAccount(address, password, 15000);\n\n    this.currentVoter = await this.getCurrentVoter();\n  }\n\n  async getDeployedContract() {\n    this.deployedElectionContract = new this.web3Instance!.eth.Contract(\n      ElectionContract.abi as any,\n      this.deployedElectionContractAddr!\n    ) as any;\n\n    this.currentVoter = await this.getCurrentVoter();\n    this.candidates = await this.getAllCandidates();\n  }\n\n  async getCurrentVoter() {\n    const res = await this.deployedElectionContract.methods\n      .getCurrentVoter()\n      .call({ from: this.currentAddress });\n\n    console.log(\"currentVoter\", res);\n\n    return res;\n  }\n\n  async addVoters() {\n    const res = await this.deployedElectionContract.methods\n      .addVoters([\"0xa8fF839D83Bd7D853d8B75506589eBeABB6Cb1DF\"])\n      .call({ from: this.currentAddress });\n  }\n\n  async vote() {\n    const res = await this.deployedElectionContract.methods\n      .vote(this.candidateVoteAddr)\n      .send({ from: this.currentAddress });\n\n    this.candidateVoteAddr = null;\n\n    // Update current voter\n    this.currentVoter = await this.getCurrentVoter();\n\n    console.log(\"voted\", res);\n  }\n\n  async delegateVote() {\n    const res = await this.deployedElectionContract.methods\n      .delegateVote(this.delegateVoteAddr)\n      .send({ from: this.currentAddress });\n\n    this.delegateVoteAddr = null;\n\n    // Update current voter\n    this.currentVoter = await this.getCurrentVoter();\n\n    console.log(\"voted\", res);\n  }\n\n  async getAllCandidates() {\n    const candidates = [];\n    const candidatesCount = Number(\n      await this.deployedElectionContract.methods\n        .candidatesCount()\n        .call({ from: this.currentAddress })\n    );\n\n    console.log(\"candidatesCount\", typeof candidatesCount, candidatesCount);\n\n    for (const [i] of new Array(candidatesCount).entries()) {\n      console.log(\"candidate index\", typeof i, i);\n\n      const candidate = await this.deployedElectionContract.methods\n        .candidatesList(i)\n        .call({ from: this.currentAddress });\n\n      candidates.push(candidate);\n    }\n\n    console.log(\"candiates\", candidates);\n\n    return candidates;\n  }\n\n  async getWinner() {\n    const res = await this.deployedElectionContract.methods\n      .getWinner()\n      .call({ from: this.currentAddress });\n\n    console.log(\"winner\", res);\n  }\n}\n</script>\n"]}]}