{"remainingRequest":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\src\\views\\Deploy.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\src\\views\\Deploy.vue","mtime":1644155992790},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644154681877},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\babel-loader\\lib\\index.js","mtime":1644154681784},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\ts-loader\\index.js","mtime":1644154698120},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644154681877},{"path":"D:\\COURS\\SUPINFO\\MSC-2\\5BLOC\\5bloc-mini-project\\node_modules\\vue-loader\\lib\\index.js","mtime":1644154704041}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgRWxlY3Rpb25Db250cmFjdCBmcm9tICJALy4uL2J1aWxkL2NvbnRyYWN0cy9FbGVjdGlvbkNvbnRyYWN0Lmpzb24iOwppbXBvcnQgV2ViMyBmcm9tICJ3ZWIzIjsKCkBDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHsKICAgIC8vIEhlbGxvV29ybGQsCiAgfSwKfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGVwbG95IGV4dGVuZHMgVnVlIHsKICB3ZWIzSW5zdGFuY2U6IFdlYjMgfCBudWxsID0gbnVsbDsKICBjdXJyZW50QWRkcmVzczogc3RyaW5nIHwgbnVsbCA9IG51bGw7CiAgZWxlY3Rpb25Db250cmFjdDogYW55ID0gbnVsbDsKICBkZXBsb3llZEVsZWN0aW9uQ29udHJhY3Q6IGFueSA9IG51bGw7CiAgY2FuZGlkYXRlczogYW55W10gPSBbXTsKICB2b3RlcnM6IGFueVtdID0gW107CiAgY2FuZGlkYXRlQWRkciA9ICIiOwogIHZvdGVyQWRkciA9ICIiOwogIHN0dWJBY2NvdW50czogYW55ID0gW107CgogIGZvcm06IGFueSA9IHsKICAgIHN0YXJ0RGF0ZTogbnVsbCwKICAgIGVuZERhdGU6IG51bGwsCiAgfTsKCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIGNvbnN0IHdlYjNQcm92aWRlciA9IG5ldyBXZWIzLnByb3ZpZGVycy5IdHRwUHJvdmlkZXIoCiAgICAgIC8vIndzOi8vMTcyLjI1LjAuMTAyOjc1NDUiCiAgICAgICJodHRwOi8vMTkyLjE2OC4xMi4xNDY6ODU0NSIKICAgICk7CgogICAgaWYgKHR5cGVvZiAod2luZG93IGFzIGFueSkuZXRoZXJldW0gIT09ICJ1bmRlZmluZWQiKSB7CiAgICAgIGNvbnNvbGUubG9nKCJNZXRhTWFzayBpcyBpbnN0YWxsZWQhIik7CgogICAgICAvLyAod2luZG93IGFzIGFueSkuZXRoZXJldW0ucmVxdWVzdCh7IG1ldGhvZDogJ2V0aF9yZXF1ZXN0QWNjb3VudHMnIH0pOwoKICAgICAgLy8gdGhpcy53ZWIzSW5zdGFuY2UgPSBuZXcgV2ViMygod2luZG93IGFzIGFueSkuZXRoZXJldW0pOwogICAgICB0aGlzLndlYjNJbnN0YW5jZSA9IG5ldyBXZWIzKHdlYjNQcm92aWRlcik7CgogICAgICBjb25zb2xlLmxvZygid2ViM0luc3RhbmNlIiwgdGhpcy53ZWIzSW5zdGFuY2UpOwoKICAgICAgY29uc3QgZmV0Y2hlZEFjY291bnRzID0gYXdhaXQgdGhpcy53ZWIzSW5zdGFuY2UuZXRoLmdldEFjY291bnRzKCk7CgogICAgICBjb25zb2xlLmxvZygiZmV0Y2hlZEFjY291bnRzIiwgZmV0Y2hlZEFjY291bnRzKTsKCiAgICAgIHRoaXMuY3VycmVudEFkZHJlc3MgPSBmZXRjaGVkQWNjb3VudHNbMF07CgogICAgICB0aGlzLmVsZWN0aW9uQ29udHJhY3QgPSBuZXcgdGhpcy53ZWIzSW5zdGFuY2UuZXRoLkNvbnRyYWN0KAogICAgICAgIEVsZWN0aW9uQ29udHJhY3QuYWJpIGFzIGFueQogICAgICAgIC8vIEVsZWN0aW9uQ29udHJhY3QubmV0d29ya3NbJzU3NzcnXS5hZGRyZXNzCiAgICAgICkgYXMgYW55OwoKICAgICAgY29uc29sZS5sb2coImVsZWN0aW9uQ29udHJhY3QiLCB0aGlzLmVsZWN0aW9uQ29udHJhY3QpOwogICAgfSBlbHNlIHsKICAgICAgY29uc29sZS5sb2coIk1ldGFNYXNrIGlzIG5vdCBpbnN0YWxsZWQiKTsKICAgIH0KICB9CgogIGJlZm9yZURlc3Ryb3koKSB7CiAgICBpZiAodGhpcy53ZWIzSW5zdGFuY2UpIHsKICAgICAgdGhpcy53ZWIzSW5zdGFuY2UgPSBudWxsOwogICAgfQoKICAgIGlmICh0aGlzLmVsZWN0aW9uQ29udHJhY3QpIHsKICAgICAgdGhpcy5lbGVjdGlvbkNvbnRyYWN0ID0gbnVsbDsKICAgIH0KICB9CgogIGFzeW5jIGdlbmVyYXRlU3R1YkFjY291bnRzKCkgewogICAgZm9yIChjb25zdCBpIG9mIG5ldyBBcnJheSg2KSkgewogICAgICBjb25zdCBwYXNzd29yZCA9IChNYXRoLnJhbmRvbSgpICsgMSkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KTsKCiAgICAgIGNvbnN0IGFkZHJlc3MgPSBhd2FpdCB0aGlzLndlYjNJbnN0YW5jZSEuZXRoLnBlcnNvbmFsLm5ld0FjY291bnQoCiAgICAgICAgcGFzc3dvcmQKICAgICAgKTsKICAgICAgdGhpcy51bmxvY2tBY2NvdW50KGFkZHJlc3MsIHBhc3N3b3JkKTsKICAgICAgdGhpcy5zdHViQWNjb3VudHMucHVzaCh7CiAgICAgICAgYWRkcmVzcywKICAgICAgICBwYXNzd29yZCwKICAgICAgfSk7CiAgICB9CgogICAgY29uc29sZS5sb2coInN0dWJBY2NvdW50cyIsIHRoaXMuc3R1YkFjY291bnRzKTsKICB9CgogIGFzeW5jIHVubG9ja0FjY291bnQoYWRkcmVzczogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSB7CiAgICAvLyB1bmxvY2sgZm9yIGEgbG9uZyB0aW1lCiAgICB0aGlzLndlYjNJbnN0YW5jZSEuZXRoLnBlcnNvbmFsLnVubG9ja0FjY291bnQoYWRkcmVzcywgcGFzc3dvcmQsIDE1MDAwKTsKICB9CgogIGFzeW5jIGRlcGxveSgpIHsKICAgIC8vIGNvbnN0IGNvbnRyYWN0Qnl0ZUNvZGUgPSBhd2FpdCB0aGlzLndlYjNJbnN0YW5jZSEuZXRoLmdldENvZGUoCiAgICAvLyAgIEVsZWN0aW9uQ29udHJhY3QubmV0d29ya3NbJzU3NzcnXS5hZGRyZXNzCiAgICAvLyApOwogICAgY29uc3QgY29udHJhY3RCeXRlQ29kZSA9IEVsZWN0aW9uQ29udHJhY3QuYnl0ZWNvZGU7CgogICAgLy8gY29uc3QgY2FuZGlkYXRlczogc3RyaW5nW10gPSB0aGlzLnN0dWJBY2NvdW50cwogICAgLy8gICAuZmlsdGVyKChhY2NvdW50OiBhbnkpID0+ICFhY2NvdW50LmFkZHJlc3MgIT09IHRoaXMuY3VycmVudEFkZHJlc3MpCiAgICAvLyAgIC8vIC5zbGljZSgwLCAxMCkKICAgIC8vICAgLm1hcCgoYWNjb3VudDogYW55KSA9PiBhY2NvdW50LmFkZHJlc3MpOwogICAgLy8gY29uc3Qgdm90ZXJzOiBzdHJpbmdbXSA9IHRoaXMuc3R1YkFjY291bnRzCiAgICAvLyAgIC5maWx0ZXIoKGFjY291bnQ6IGFueSkgPT4gIWFjY291bnQuYWRkcmVzcyAhPT0gdGhpcy5jdXJyZW50QWRkcmVzcykKICAgIC8vICAgLm1hcCgoYWNjb3VudDogYW55KSA9PiBhY2NvdW50LmFkZHJlc3MpCiAgICAvLyAgIC5maWx0ZXIoKGFkZHI6IHN0cmluZykgPT4gIWNhbmRpZGF0ZXMuaW5jbHVkZXMoYWRkcikpOwoKICAgIGNvbnN0IGNhbmRpZGF0ZXMgPSB0aGlzLmNhbmRpZGF0ZXM7CiAgICBjb25zdCB2b3RlcnMgPSB0aGlzLnZvdGVyczsKCiAgICBjb25zdCBzdGFydERhdGUgPSBNYXRoLnRydW5jKHRoaXMuZm9ybS5zdGFydERhdGUuZ2V0VGltZSgpIC8gMTAwMCk7CiAgICBjb25zdCBlbmREYXRlID0gTWF0aC50cnVuYyh0aGlzLmZvcm0uZW5kRGF0ZS5nZXRUaW1lKCkgLyAxMDAwKTsKCiAgICBjb25zb2xlLmxvZygic3RhcnREYXRlIiwgc3RhcnREYXRlKTsKICAgIGNvbnNvbGUubG9nKCJlbmREYXRlIiwgZW5kRGF0ZSk7CgogICAgdGhpcy5kZXBsb3llZEVsZWN0aW9uQ29udHJhY3QgPSBhd2FpdCB0aGlzLmVsZWN0aW9uQ29udHJhY3QKICAgICAgLmRlcGxveSh7CiAgICAgICAgZGF0YTogY29udHJhY3RCeXRlQ29kZSwKICAgICAgICBhcmd1bWVudHM6IFtjYW5kaWRhdGVzLCB2b3RlcnMsIHN0YXJ0RGF0ZSwgZW5kRGF0ZV0sCiAgICAgIH0pCiAgICAgIC5zZW5kKHsKICAgICAgICBmcm9tOiB0aGlzLmN1cnJlbnRBZGRyZXNzLAogICAgICAgIGdhczogMjEyMDU0MSwKICAgICAgICBnYXNQcmljZTogIjIwMDAwMDAwMDAiLAogICAgICB9KTsKCiAgICBjb25zb2xlLmxvZygiZGVwbG95ZWRFbGVjdGlvbkNvbnRyYWN0IiwgdGhpcy5kZXBsb3llZEVsZWN0aW9uQ29udHJhY3QpOwogIH0KCiAgYWRkQ2FuZGlkYXRlKCkgewogICAgaWYgKHRoaXMuY2FuZGlkYXRlQWRkci50cmltKCkpIHsKICAgICAgdGhpcy5jYW5kaWRhdGVzLnB1c2godGhpcy5jYW5kaWRhdGVBZGRyLnRyaW0oKSk7CgogICAgICB0aGlzLmNhbmRpZGF0ZUFkZHIgPSAiIjsKICAgIH0KICB9CgogIGFkZFZvdGVyKCkgewogICAgaWYgKHRoaXMudm90ZXJBZGRyLnRyaW0oKSkgewogICAgICB0aGlzLnZvdGVycy5wdXNoKHRoaXMudm90ZXJBZGRyLnRyaW0oKSk7CgogICAgICB0aGlzLnZvdGVyQWRkciA9ICIiOwogICAgfQogIH0KfQo="},{"version":3,"sources":["Deploy.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Deploy.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <b-container fluid class=\"fillspace box red\">\n    <div>\n      <b-form\n        @submit.prevent=\"deploy\"\n        v-if=\"stubAccounts.length && !deployedElectionContract\"\n      >\n        <b-form-group\n          id=\"input-group-1\"\n          label=\"Start date:\"\n          label-for=\"input-1\"\n          description=\"The start date of the contract\"\n        >\n          <b-form-datepicker\n            id=\"input-1\"\n            value-as-date\n            v-model=\"form.startDate\"\n            class=\"mb-2\"\n            required\n          ></b-form-datepicker>\n        </b-form-group>\n\n        <b-form-group\n          id=\"input-group-2\"\n          label=\"End date:\"\n          label-for=\"input-2\"\n          description=\"The end date of the contract\"\n        >\n          <b-form-datepicker\n            id=\"input-2\"\n            value-as-date\n            v-model=\"form.endDate\"\n            class=\"mb-2\"\n            required\n          ></b-form-datepicker>\n        </b-form-group>\n\n        <b-form-group\n          label=\"Candidates:\"\n          description=\"The candidates to the election\"\n        >\n          <b-list-group>\n            <b-list-group-item\n              v-for=\"candidate in candidates\"\n              :key=\"candidate\"\n              >{{ candidate }}</b-list-group-item\n            >\n          </b-list-group>\n\n          <b-form-input\n            v-model=\"candidateAddr\"\n            placeholder=\"Enter address\"\n          ></b-form-input>\n          <b-button\n            :disabled=\"\n              candidates.includes(candidateAddr) || candidateAddr === ''\n            \"\n            @click=\"addCandidate()\"\n            >Add candidate</b-button\n          >\n        </b-form-group>\n\n        <b-form-group label=\"Voters:\" description=\"The voters of the election\">\n          <b-list-group>\n            <b-list-group-item v-for=\"voter in voters\" :key=\"voter\">{{\n              voter\n            }}</b-list-group-item>\n          </b-list-group>\n\n          <b-form-input\n            v-model=\"voterAddr\"\n            placeholder=\"Enter address\"\n          ></b-form-input>\n          <b-button\n            :disabled=\"voters.includes(voterAddr) || voterAddr === ''\"\n            @click=\"addVoter()\"\n            >Add voter</b-button\n          >\n        </b-form-group>\n\n        <b-button type=\"submit\" variant=\"primary\">Deploy</b-button>\n      </b-form>\n      <b-card class=\"mt-3\" header=\"Form Data Result\">\n        <pre class=\"m-0\">{{ form }}</pre>\n      </b-card>\n\n      <b-card\n        class=\"mt-3\"\n        header=\"Contract address\"\n        v-if=\"deployedElectionContract\"\n      >\n        <pre class=\"m-0\">{{ deployedElectionContract._address }}</pre>\n      </b-card>\n    </div>\n\n    <button @click=\"generateStubAccounts\" v-if=\"!stubAccounts.length\">\n      Generate stub accounts\n    </button>\n    <table v-if=\"stubAccounts.length\">\n      <thead>\n        <tr>\n          <th>Address</th>\n          <th>Password</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"account in stubAccounts\" :key=\"account.address\">\n          <td>{{ account.address }}</td>\n          <td>{{ account.password }}</td>\n          <td>\n            <button @click=\"currentAddress = account.address\">\n              Make default\n            </button>\n            <button @click=\"unlockAccount(account.address, account.password)\">\n              Unlock\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </b-container>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport ElectionContract from \"@/../build/contracts/ElectionContract.json\";\nimport Web3 from \"web3\";\n\n@Component({\n  components: {\n    // HelloWorld,\n  },\n})\nexport default class Deploy extends Vue {\n  web3Instance: Web3 | null = null;\n  currentAddress: string | null = null;\n  electionContract: any = null;\n  deployedElectionContract: any = null;\n  candidates: any[] = [];\n  voters: any[] = [];\n  candidateAddr = \"\";\n  voterAddr = \"\";\n  stubAccounts: any = [];\n\n  form: any = {\n    startDate: null,\n    endDate: null,\n  };\n\n  async mounted() {\n    const web3Provider = new Web3.providers.HttpProvider(\n      //\"ws://172.25.0.102:7545\"\n      \"http://192.168.12.146:8545\"\n    );\n\n    if (typeof (window as any).ethereum !== \"undefined\") {\n      console.log(\"MetaMask is installed!\");\n\n      // (window as any).ethereum.request({ method: 'eth_requestAccounts' });\n\n      // this.web3Instance = new Web3((window as any).ethereum);\n      this.web3Instance = new Web3(web3Provider);\n\n      console.log(\"web3Instance\", this.web3Instance);\n\n      const fetchedAccounts = await this.web3Instance.eth.getAccounts();\n\n      console.log(\"fetchedAccounts\", fetchedAccounts);\n\n      this.currentAddress = fetchedAccounts[0];\n\n      this.electionContract = new this.web3Instance.eth.Contract(\n        ElectionContract.abi as any\n        // ElectionContract.networks['5777'].address\n      ) as any;\n\n      console.log(\"electionContract\", this.electionContract);\n    } else {\n      console.log(\"MetaMask is not installed\");\n    }\n  }\n\n  beforeDestroy() {\n    if (this.web3Instance) {\n      this.web3Instance = null;\n    }\n\n    if (this.electionContract) {\n      this.electionContract = null;\n    }\n  }\n\n  async generateStubAccounts() {\n    for (const i of new Array(6)) {\n      const password = (Math.random() + 1).toString(36).substring(7);\n\n      const address = await this.web3Instance!.eth.personal.newAccount(\n        password\n      );\n      this.unlockAccount(address, password);\n      this.stubAccounts.push({\n        address,\n        password,\n      });\n    }\n\n    console.log(\"stubAccounts\", this.stubAccounts);\n  }\n\n  async unlockAccount(address: string, password: string) {\n    // unlock for a long time\n    this.web3Instance!.eth.personal.unlockAccount(address, password, 15000);\n  }\n\n  async deploy() {\n    // const contractByteCode = await this.web3Instance!.eth.getCode(\n    //   ElectionContract.networks['5777'].address\n    // );\n    const contractByteCode = ElectionContract.bytecode;\n\n    // const candidates: string[] = this.stubAccounts\n    //   .filter((account: any) => !account.address !== this.currentAddress)\n    //   // .slice(0, 10)\n    //   .map((account: any) => account.address);\n    // const voters: string[] = this.stubAccounts\n    //   .filter((account: any) => !account.address !== this.currentAddress)\n    //   .map((account: any) => account.address)\n    //   .filter((addr: string) => !candidates.includes(addr));\n\n    const candidates = this.candidates;\n    const voters = this.voters;\n\n    const startDate = Math.trunc(this.form.startDate.getTime() / 1000);\n    const endDate = Math.trunc(this.form.endDate.getTime() / 1000);\n\n    console.log(\"startDate\", startDate);\n    console.log(\"endDate\", endDate);\n\n    this.deployedElectionContract = await this.electionContract\n      .deploy({\n        data: contractByteCode,\n        arguments: [candidates, voters, startDate, endDate],\n      })\n      .send({\n        from: this.currentAddress,\n        gas: 2120541,\n        gasPrice: \"2000000000\",\n      });\n\n    console.log(\"deployedElectionContract\", this.deployedElectionContract);\n  }\n\n  addCandidate() {\n    if (this.candidateAddr.trim()) {\n      this.candidates.push(this.candidateAddr.trim());\n\n      this.candidateAddr = \"\";\n    }\n  }\n\n  addVoter() {\n    if (this.voterAddr.trim()) {\n      this.voters.push(this.voterAddr.trim());\n\n      this.voterAddr = \"\";\n    }\n  }\n}\n</script>\n"]}]}